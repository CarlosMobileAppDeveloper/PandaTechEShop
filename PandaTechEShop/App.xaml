<?xml version="1.0" encoding="utf-8" ?>
<prism:PrismApplication
    x:Class="PandaTechEShop.App"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:PandaTechEShop.Controls;assembly=PandaTechEShop"
    xmlns:effects="clr-namespace:PandaTechEShop.Effects;assembly=PandaTechEShop"
    xmlns:helpers="clr-namespace:PandaTechEShop.Helpers;assembly=PandaTechEShop"
    xmlns:mtrl="clr-namespace:XF.Material.Forms.Resources;assembly=XF.Material"
    xmlns:prism="clr-namespace:Prism.DryIoc;assembly=Prism.DryIoc.Forms"
    xmlns:themes="clr-namespace:PandaTechEShop.Themes;assembly=PandaTechEShop">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>

                <!--
                Escoger de alguno de los temas prediseñados:

                <local:BlackboardTheme />
                <local:BlackSunTheme />
                <local:DarkTheme />

                <local:MyAppTheme />
                <local:CabernetMyAppTheme />
                <local:HazeTheme />

                O utilizar uno personalizado:

                <local:MyAppTheme />
                -->

                <!--<themes:BlackSunTheme />-->
            </ResourceDictionary.MergedDictionaries>

            <!--  UNITS  -->
            <!--<x:Double x:Key="BaseFontSize">14</x:Double>-->

            <!--  STATIC IMAGES  -->
            <!--<FileImageSource x:Key="MainBackgroundImage">main_background_image.png</FileImageSource>-->

            <!--  IMAGE STYLES  -->
            <!--<Style x:Key="MainMenuBackgroundImageStyle" TargetType="Image">
                <Setter Property="Aspect" Value="Fill" />
                <Setter Property="Source" Value="{StaticResource MainBackgroundImage}" />
                <Setter Property="Opacity" Value="{DynamicResource MainMenuBackgroundImageOpacity}" />
            </Style>-->

            <!--  RESPONSIVE COMMON  -->
            <!--<OnIdiom x:Key="MainWrapperPadding" x:TypeArguments="Thickness">
                <OnIdiom.Phone>0</OnIdiom.Phone>
                <OnIdiom.Tablet>100,0,100,0</OnIdiom.Tablet>
            </OnIdiom>

            <Style x:Key="LoginFormsContentStyle" TargetType="Layout">
                <Setter Property="Padding" Value="{helpers:OnOrientationThickness PortraitPhone='0,10,0,20', LandscapePhone='30,10,30,30', PortraitTablet=0, LandscapeTablet=0}" />
            </Style>-->

            <!--  BASE STYLES  -->
            <!--<Style x:Key="LabelBoldStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="{StaticResource AppBoldFontFamily}" />
                <Setter Property="FontAttributes" Value="Bold" />
            </Style>

            <Style x:Key="RoundedButtonStyle" TargetType="Button">
                <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
                <Setter Property="CornerRadius" Value="{DynamicResource BaseButtonCornerRadius}" />
                <Setter Property="HeightRequest" Value="{DynamicResource BaseButtonHeight}" />
            </Style>-->

            <!--  ENTRY FIELDS  -->
            <!--<Style x:Key="SingleLineEntryStyle" TargetType="Entry">
                <Setter Property="TextColor" Value="{DynamicResource InverseTextColor}" />
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="HorizontalTextAlignment" Value="Start" />
                <Setter Property="helpers:EntryProperties.BorderStyle" Value="BottomLine" />
                <Setter Property="helpers:EntryProperties.BorderColor" Value="{DynamicResource InverseTextColor}" />
                <Setter Property="helpers:EntryProperties.PlaceholderColor" Value="{DynamicResource InverseTextColor}" />
                <Setter Property="helpers:EntryProperties.HorizontalPadding" Value="0" />
                <Style.Triggers>
                    <Trigger TargetType="Entry" Property="IsFocused" Value="True">
                        <Setter Property="helpers:EntryProperties.BorderColor" Value="{DynamicResource AccentColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>-->

            <!--  FILLED BUTTONS  -->
            <!--<Style
                x:Key="TranslucidButtonStyle"
                BasedOn="{StaticResource RoundedButtonStyle}"
                TargetType="Button">
                <Setter Property="BackgroundColor" Value="{DynamicResource TranslucidButtonColor}" />
                <Setter Property="TextColor" Value="{DynamicResource InverseTextColor}" />
                <Setter Property="HeightRequest" Value="{DynamicResource BaseButtonHeight}" />
                <Setter Property="effects:Effects.ShadowSize" Value="3" />
                <Setter Property="effects:Effects.Shadow" Value="True" />
                <Setter Property="effects:Effects.ShadowIOSColor" Value="#22000000" />
                <Setter Property="BorderColor" Value="Transparent" />
            </Style>

            <Style
                x:Key="TransparentButtonStyle"
                BasedOn="{StaticResource RoundedButtonStyle}"
                TargetType="Button">
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="BorderColor" Value="Transparent" />
                <Setter Property="TextColor" Value="{DynamicResource InverseTextColor}" />
            </Style>-->

            <!--  VALIDATIONS  -->
            <!--<Style x:Key="ValidationEntryBaseStyle" TargetType="controls:RoundedLabel">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="HeightRequest" Value="18" />
                <Setter Property="HorizontalTextAlignment" Value="Start" />
                <Setter Property="HorizontalOptions" Value="Start" />
                <Setter Property="Padding" Value="{OnPlatform iOS='5,1', Android='5,0'}" />
                <Setter Property="CornerRadius" Value="9" />
            </Style>

            <Style
                x:Key="ValidationEntryErrorStyle"
                BasedOn="{StaticResource ValidationEntryBaseStyle}"
                TargetType="controls:RoundedLabel">
                <Setter Property="BackgroundColor" Value="{DynamicResource ErrorColor}" />
                <Setter Property="TextColor" Value="{DynamicResource OverImageTextColor}" />
            </Style>-->


            <!--  UNITS CARL  -->
            <x:Double x:Key="BaseFontSize">14</x:Double>

            <!--  LIGHT COLOURS CARL  -->
            <Color x:Key="LightPrimaryBackgroundColor">#ffffff</Color>
            <Color x:Key="LightPrimaryColor">#2a3fce</Color>
            <Color x:Key="LightPrimaryColorLight">#6d6aff</Color>
            <Color x:Key="LightPrimaryColorDark">#00189c</Color>
            <Color x:Key="LightSecondaryColor">#4bd7b1</Color>
            <Color x:Key="LightSecondaryColorLight">#84ffe3</Color>
            <Color x:Key="LightSecondaryColorDark">#00a582</Color>

            <Color x:Key="PrimaryButtonColor">#2a3fce</Color>
            <Color x:Key="PrimaryButtonTextColor">#ffffff</Color>
            <Color x:Key="LightPrimaryTextColor">#2C2C2C</Color>
            <Color x:Key="LightPrimaryTextSubTitleColor">#c1c5c8</Color>
            <Color x:Key="ErrorColor">#e63200</Color>

            <Color x:Key="SurfaceColor">#f5f4f4</Color>

            <mtrl:MaterialColorConfiguration
                x:Key="Material.Color"
                Background="{StaticResource LightPrimaryBackgroundColor}"
                Error="{StaticResource ErrorColor}"
                OnBackground="#2C2C2C"
                OnError="#FFFFFF"
                OnPrimary="#FFFFFF"
                OnSecondary="#FFFFFF"
                OnSurface="#2C2C2C"
                Primary="{StaticResource LightPrimaryColor}"
                PrimaryVariant="{StaticResource LightPrimaryColorDark}"
                Secondary="{StaticResource LightSecondaryColor}"
                SecondaryVariant="{StaticResource LightSecondaryColorDark}"
                Surface="{StaticResource SurfaceColor}" />

            <mtrl:MaterialConfiguration x:Key="Material.Configuration" ColorConfiguration="{StaticResource Material.Color}" />


            <!--  BASE STYLES Carl  -->
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource LightPrimaryTextColor}" />
                <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
            </Style>
            <Style TargetType="Entry">
                <Setter Property="TextColor" Value="{StaticResource LightPrimaryTextColor}" />
            </Style>

            <!--  RESPONSIVE COMMON CARL  -->
            <OnIdiom x:Key="MainPagePadding" x:TypeArguments="Thickness">
                <OnIdiom.Phone>20,0,20,0</OnIdiom.Phone>
                <OnIdiom.Tablet>100,0,100,0</OnIdiom.Tablet>
            </OnIdiom>

            <Style x:Key="SignUpFormsContentStyle" TargetType="Layout">
                <Setter Property="Padding" Value="{helpers:OnOrientationThickness PortraitPhone='0,10,0,20', LandscapePhone='30,10,30,30', PortraitTablet=0, LandscapeTablet=0}" />
            </Style>

            <Style x:Key="SignUpImageStyle" TargetType="Layout">
                <Setter Property="Margin" Value="{helpers:OnOrientationThickness PortraitPhone='0,-10,-17,0', LandscapePhone='0,-10,-47,0', PortraitTablet='0,0,-17,0', LandscapeTablet='0,0,-17,0'}" />
            </Style>

            <!--  ENTRY FIELDS CARL  -->
            <!--<Style x:Key="BaseEntryStyle" TargetType="material:MaterialTextField">
                <Setter Property="ErrorColor" Value="{StaticResource LightPrimaryTextColor}" />
            </Style>-->


        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>