<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    x:Class="PandaTechEShop.Views.Account.SignupPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:material="clr-namespace:XF.Material.Forms.UI;assembly=XF.Material"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    Title="{Binding Title}"
    ios:Page.UseSafeArea="True"
    BackgroundColor="{DynamicResource PrimaryBackgroundColor}"
    NavigationPage.HasNavigationBar="False">
    <ContentPage.Resources>
        <Style x:Key="InvalidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Red" />
        </Style>
        <Style x:Key="InvalidEntryLabelStyle" TargetType="Label">
            <Setter Property="TextColor" Value="Red" />
            <Setter Property="FontSize" Value="12" />
        </Style>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid>
            <ScrollView Margin="0" Padding="{StaticResource MainPagePadding}">
                <Grid
                    ColumnSpacing="0"
                    HorizontalOptions="Fill"
                    RowDefinitions="200, Auto, Auto, Auto, *, Auto"
                    RowSpacing="0"
                    Style="{StaticResource SignUpFormsContentStyle}"
                    VerticalOptions="FillAndExpand">

                    <Image
                        Grid.Row="0"
                        HeightRequest="200"
                        HorizontalOptions="EndAndExpand"
                        Source="shape.png"
                        Style="{StaticResource SignUpImageStyle}" />

                    <Label
                        Grid.Row="1"
                        Margin="0,20,0,40"
                        FontAttributes="Bold"
                        Text="Create Account">
                        <Label.FontSize>
                            <OnIdiom
                                x:TypeArguments="x:Double"
                                Phone="24"
                                Tablet="34" />
                        </Label.FontSize>
                    </Label>

                    <Grid
                        Grid.Row="2"
                        Padding="0"
                        RowDefinitions="*, *, *"
                        VerticalOptions="StartAndExpand">

                        <StackLayout Grid.Row="0">
                            <material:MaterialTextField
                                AlwaysShowUnderline="True"
                                BackgroundColor="Transparent"
                                CardBackgroundColor="Transparent"
                                ErrorColor="Red"
                                ErrorIcon="ic_warning_fill"
                                ErrorText="Invalid Email Entry"
                                HasError="{Binding IsEmailAddressValid, Converter={xct:InvertedBoolConverter}}"
                                InputType="Email"
                                IsSpellCheckEnabled="False"
                                IsTextPredictionEnabled="False"
                                Placeholder="Email"
                                ReturnType="Next"
                                Text="{Binding EmailAddress}">
                                <material:MaterialTextField.Behaviors>
                                    <xct:EventToCommandBehavior Command="{Binding ForceValidateEmailCommand}" EventName="Unfocused" />
                                    <xct:EventToCommandBehavior Command="{Binding ValidateEmailCommand}" EventName="TextChanged" />
                                    <xct:EmailValidationBehavior
                                        x:Name="EmailValidator"
                                        DecorationFlags="Trim"
                                        ForceValidateCommand="{Binding EmailValidatorCommand}"
                                        IsValid="{Binding IsEmailAddressValid}" />
                                </material:MaterialTextField.Behaviors>
                            </material:MaterialTextField>
                        </StackLayout>

                        <StackLayout Grid.Row="1">
                            <material:MaterialTextField
                                x:Name="PasswordEntry"
                                AlwaysShowUnderline="True"
                                BackgroundColor="Transparent"
                                CardBackgroundColor="Transparent"
                                ErrorColor="Red"
                                ErrorIcon="ic_warning_fill"
                                ErrorText="{Binding PasswordError}"
                                HasError="{Binding IsPasswordValid, Converter={xct:InvertedBoolConverter}}"
                                InputType="Password"
                                IsSpellCheckEnabled="False"
                                IsTextPredictionEnabled="False"
                                Placeholder="Password"
                                ReturnType="Next"
                                Text="{Binding Password}">
                                <material:MaterialTextField.Behaviors>
                                    <xct:EventToCommandBehavior Command="{Binding ForceValidatePasswordCommand}" EventName="Unfocused" />
                                    <xct:EventToCommandBehavior Command="{Binding ValidatePasswordCommand}" EventName="TextChanged" />
                                    <xct:MultiValidationBehavior
                                        x:Name="PasswordValidator"
                                        Errors="{Binding PasswordErrors}"
                                        ForceValidateCommand="{Binding PasswordValidatorCommand}"
                                        IsValid="{Binding IsPasswordValid}">
                                        <xct:TextValidationBehavior xct:MultiValidationBehavior.Error="Minimum 8 length" MinimumLength="8" />
                                        <xct:CharactersValidationBehavior
                                            xct:MultiValidationBehavior.Error="Password must have 1 digit"
                                            CharacterType="Digit"
                                            MinimumCharacterCount="1" />
                                        <xct:CharactersValidationBehavior
                                            xct:MultiValidationBehavior.Error="Password must have 1 lowercase character"
                                            CharacterType="LowercaseLetter"
                                            MinimumCharacterCount="1" />
                                        <xct:CharactersValidationBehavior
                                            xct:MultiValidationBehavior.Error="Password must have 1 uppercase character"
                                            CharacterType="UppercaseLetter"
                                            MinimumCharacterCount="1" />
                                        <xct:CharactersValidationBehavior
                                            xct:MultiValidationBehavior.Error="Password must have 1 special character"
                                            CharacterType="NonAlphanumericSymbol"
                                            MinimumCharacterCount="1" />
                                        <xct:CharactersValidationBehavior
                                            xct:MultiValidationBehavior.Error="Password cannot have any spaces"
                                            CharacterType="Whitespace"
                                            MaximumCharacterCount="0" />
                                    </xct:MultiValidationBehavior>
                                </material:MaterialTextField.Behaviors>
                            </material:MaterialTextField>
                        </StackLayout>

                        <StackLayout Grid.Row="2">
                            <material:MaterialTextField
                                AlwaysShowUnderline="True"
                                BackgroundColor="Transparent"
                                CardBackgroundColor="Transparent"
                                ErrorColor="Red"
                                ErrorIcon="ic_warning_fill"
                                ErrorText="Passwords do not match"
                                HasError="{Binding IsPasswordMatchValid, Converter={xct:InvertedBoolConverter}}"
                                InputType="Password"
                                IsSpellCheckEnabled="False"
                                IsTextPredictionEnabled="False"
                                Placeholder="Confirm Password"
                                ReturnType="Go"
                                Text="{Binding ConfirmedPassword}">
                                <material:MaterialTextField.Behaviors>
                                    <xct:EventToCommandBehavior Command="{Binding ForceValidatePasswordMatchCommand}" EventName="Unfocused" />
                                    <xct:EventToCommandBehavior Command="{Binding ValidatePasswordMatchCommand}" EventName="TextChanged" />
                                    <xct:RequiredStringValidationBehavior
                                        ForceValidateCommand="{Binding PasswordMatchValidatorCommand}"
                                        IsValid="{Binding IsPasswordMatchValid}"
                                        RequiredString="{Binding Text, Source={x:Reference PasswordEntry}}" />
                                </material:MaterialTextField.Behaviors>
                            </material:MaterialTextField>
                        </StackLayout>
                    </Grid>


                    <Grid
                        Grid.Row="3"
                        Margin="0,20,0,20"
                        VerticalOptions="Start">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5.5*" />
                            <ColumnDefinition Width="4.5*" />
                        </Grid.ColumnDefinitions>
                        <Frame
                            Grid.Column="1"
                            Padding="15"
                            BackgroundColor="{StaticResource PrimaryButtonColor}"
                            CornerRadius="35">
                            <StackLayout Orientation="Horizontal">
                                <Label
                                    FontSize="Medium"
                                    HorizontalOptions="EndAndExpand"
                                    Text="SIGN UP"
                                    TextColor="{StaticResource PrimaryButtonTextColor}"
                                    VerticalOptions="Center" />
                                <Image
                                    HeightRequest="30"
                                    HorizontalOptions="CenterAndExpand"
                                    Source="rightarrow.png" />
                            </StackLayout>
                            <Frame.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding SignUpCommand}" />
                            </Frame.GestureRecognizers>
                        </Frame>
                    </Grid>

                    <Label
                        Grid.Row="4"
                        Margin="0,20"
                        HorizontalOptions="Center"
                        VerticalOptions="End">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span
                                    FontSize="Small"
                                    Text="Already have an account? "
                                    TextColor="{StaticResource PrimaryTextColor}" />
                                <Span
                                    FontSize="Small"
                                    Text=" Sign in "
                                    TextColor="{StaticResource PrimaryButtonColor}">
                                    <Span.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding NavigateToSignInPageCommand}" />
                                    </Span.GestureRecognizers>
                                </Span>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </Grid>
            </ScrollView>
        </Grid>
    </ContentPage.Content>
</ContentPage>
